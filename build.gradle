group 'masterSpringMVC'


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
//apply plugin: 'docker'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'masterSpringMVC'
    version '1.0-SNAPSHOT'
}

buildscript {
    ext {
        springBootVersion = '1.4.3.RELEASE'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-starter-social-twitter'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    compile 'org.springframework.boot:spring-boot-starter-security'
    // https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity3
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4'

    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'




    compile 'org.webjars:materializecss:0.96.0'
    compile 'org.webjars:jquery:2.1.4'

    //jsr-310
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    //swagger
    compile 'io.springfox:springfox-swagger2:2.7.0'
    compile 'io.springfox:springfox-swagger-ui:2.7.0'

    //message
    compile 'org.springframework.boot:spring-boot-starter-websocket'
    compile 'org.springframework:spring-messaging'

    //websocket js
    compile group: 'org.webjars', name: 'sockjs-client', version: '1.0.0'
    compile group: 'org.webjars', name: 'stomp-websocket', version: '2.3.3'


    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

//task buildDocker(type: Docker, dependsOn: build) {
//    push = true
//    applicationName = jar.baseName
//    dockerfile = file('src/main/docker/Dockerfile')
//    doFirst {
//        copy {
//            from jar
//            into stageDir
//        }
//    }
//}